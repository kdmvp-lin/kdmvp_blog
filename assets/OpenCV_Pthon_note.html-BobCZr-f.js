import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as i,a as n,b as s,d as t,f as p}from"./app-Dd6n3JLB.js";const l={},u=p(`<h1 id="opencv-pthon" tabindex="-1"><a class="header-anchor" href="#opencv-pthon"><span>OpenCV-Pthon</span></a></h1><h2 id="_1-python和opencv需要的环境" tabindex="-1"><a class="header-anchor" href="#_1-python和opencv需要的环境"><span>1.Python和opencv需要的环境</span></a></h2><p>​ 建议直接安装anaconda</p><h2 id="_2-图片读取" tabindex="-1"><a class="header-anchor" href="#_2-图片读取"><span>2.图片读取</span></a></h2><h3 id="_2-1图片的展示" tabindex="-1"><a class="header-anchor" href="#_2-1图片的展示"><span>2.1图片的展示</span></a></h3><p>​ 首先用python来读取一张图片</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> cv2
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> ply
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token operator">%</span>matplotlib inline
img<span class="token operator">=</span>cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;./one.png&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过调用来显示图片</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>img
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>array([[[255, 255, 255],
        [255, 255, 255],
        [255, 255, 255],
        ...,
        [255, 255, 255],
        [255, 255, 255],
        [255, 255, 255]],

       [[255, 255, 255],
        [255, 255, 255],
        [255, 255, 255],
        ...,
        [255, 255, 255],
        [255, 255, 255],
        [255, 255, 255]],

       [[255, 255, 255],
        [255, 255, 255],
        [255, 255, 255],
        ...,
        [255, 255, 255],
        [255, 255, 255],
        [255, 255, 255]],

       ...,
        [255, 255, 255],
        [255, 255, 255],
        ...,
        [255, 255, 255],
        [255, 255, 255],
        [255, 255, 255]]], dtype=uint8)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样就发现读取的图片是一个三维数组</p><p>但同时也可以用另外一种方法来显示图片，采用窗口的形式</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#图像显示创建窗口</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;oneimg&#39;</span><span class="token punctuation">,</span>img<span class="token punctuation">)</span>
<span class="token comment">#等待时间，也就是图片显示时间</span>
cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token comment">#键盘输入就停止</span>
cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果想用实时使用这一块的功能就只需要将这一块改成函数</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#创建一个显示图片窗口并且键盘输入后停止的自定义函数</span>
<span class="token keyword">def</span> <span class="token function">cv_show</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>img<span class="token punctuation">)</span><span class="token punctuation">:</span>
    cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>name<span class="token punctuation">,</span>img<span class="token punctuation">)</span>
    cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样就可以使用cv_show函数显示想要读取的任何图片</p><h3 id="_2-2图片的截取" tabindex="-1"><a class="header-anchor" href="#_2-2图片的截取"><span>2.2图片的截取</span></a></h3><h4 id="_2-2-1图片大小的截取" tabindex="-1"><a class="header-anchor" href="#_2-2-1图片大小的截取"><span>2.2.1图片大小的截取</span></a></h4><p>图片的截取用到的是python中的切片功能，和数组切片类似就是定义图片上的位置</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>img3<span class="token operator">=</span>cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;two.png&#39;</span><span class="token punctuation">)</span>
cat<span class="token operator">=</span>img3<span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">:</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">:</span><span class="token number">150</span><span class="token punctuation">]</span>
cv_show<span class="token punctuation">(</span><span class="token string">&#39;cat&#39;</span><span class="token punctuation">,</span>cat<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-2-2图片颜色通道的截取" tabindex="-1"><a class="header-anchor" href="#_2-2-2图片颜色通道的截取"><span>2.2.2图片颜色通道的截取</span></a></h4><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#将img3中数据切割成三分分别对应b，g，r三个颜色通道</span>
b<span class="token punctuation">,</span>g<span class="token punctuation">,</span>r<span class="token operator">=</span>cv2<span class="token punctuation">.</span>split<span class="token punctuation">(</span>img3<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#cv2中的颜色通道为bgr，因此对应的数组下标为b：0 ，g：1， r：2</span>
img3_copy<span class="token operator">=</span>img3<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">#若想查看仅在r通道下的图片颜色就把b，g通道值设置为0即可，也就是对切片操作中第三个参数进行设置</span>
img3_copy<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span>
img3_copy<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span>
cv_show<span class="token punctuation">(</span><span class="token string">&#39;R&#39;</span><span class="token punctuation">,</span>img3_copy<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#cv2中的颜色通道为bgr，因此对应的数组下标为b：0 ，g：1， r：2</span>
img3_copy<span class="token operator">=</span>img3<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">#若想查看仅在g通道下的图片颜色就把b，r通道值设置为0即可，也就是对切片操作中第三个参数进行设置</span>
img3_copy<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span>
img3_copy<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span>
cv_show<span class="token punctuation">(</span><span class="token string">&#39;G&#39;</span><span class="token punctuation">,</span>img3_copy<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#cv2中的颜色通道为bgr，因此对应的数组下标为b：0 ，g：1， r：2</span>
img3_copy<span class="token operator">=</span>img3<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">#若想查看仅在r通道下的图片颜色就把r，g通道值设置为0即可，也就是对切片操作中第三个参数进行设置</span>
img3_copy<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span>
img3_copy<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span>
cv_show<span class="token punctuation">(</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span>img3_copy<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3图像填充" tabindex="-1"><a class="header-anchor" href="#_2-3图像填充"><span>2.3图像填充</span></a></h3><p>图像填充有五种方法填充的效果也不相同</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#首先设置四个边距要填充的距离</span>
top<span class="token punctuation">,</span>bottom<span class="token punctuation">,</span>left<span class="token punctuation">,</span>right<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span>
<span class="token comment">#方法一：BORDER_REPLICATE 复制法，也就是复制最边缘的像素</span>
replicate<span class="token operator">=</span>cv2<span class="token punctuation">.</span>copyMakeBorder<span class="token punctuation">(</span>img<span class="token punctuation">,</span>top<span class="token punctuation">,</span>bottom<span class="token punctuation">,</span>left<span class="token punctuation">,</span>right<span class="token punctuation">,</span>borderType<span class="token operator">=</span>cv2<span class="token punctuation">.</span>BORDER_REPLICATE<span class="token punctuation">)</span>
<span class="token comment">#方法二：BORDER_REFLECT 反射法，对图像中的像素在两边进行复制 例如fedcba|abcdefgh|hgfedcb</span>
reflect<span class="token operator">=</span>cv2<span class="token punctuation">.</span>copyMakeBorder<span class="token punctuation">(</span>img<span class="token punctuation">,</span>top<span class="token punctuation">,</span>bottom<span class="token punctuation">,</span>left<span class="token punctuation">,</span>right<span class="token punctuation">,</span>borderType<span class="token operator">=</span>cv2<span class="token punctuation">.</span>BORDER_REFLECT<span class="token punctuation">)</span>
<span class="token comment">#方法三：BORDER_REFLECT_101 反射发，也就是以最边缘像素为轴对称 例如dfedcb|abcdefgh|gfedcba</span>
reflect101<span class="token operator">=</span>cv2<span class="token punctuation">.</span>copyMakeBorder<span class="token punctuation">(</span>img<span class="token punctuation">,</span>top<span class="token punctuation">,</span>bottom<span class="token punctuation">,</span>left<span class="token punctuation">,</span>right<span class="token punctuation">,</span>borderType<span class="token operator">=</span>cv2<span class="token punctuation">.</span>BORDER_REFLECT_101<span class="token punctuation">)</span>
<span class="token comment">#方法四：BORDER_WRAP 外包装法 例如cdefgh|abcdefgh|abcdefg</span>
wrap<span class="token operator">=</span>cv2<span class="token punctuation">.</span>copyMakeBorder<span class="token punctuation">(</span>img<span class="token punctuation">,</span>top<span class="token punctuation">,</span>bottom<span class="token punctuation">,</span>left<span class="token punctuation">,</span>right<span class="token punctuation">,</span>borderType<span class="token operator">=</span>cv2<span class="token punctuation">.</span>BORDER_WRAP<span class="token punctuation">)</span>
<span class="token comment">#方法四：BORDER_CONSTANT 常量法，常量数值填充</span>
constant<span class="token operator">=</span>cv2<span class="token punctuation">.</span>copyMakeBorder<span class="token punctuation">(</span>img<span class="token punctuation">,</span>top<span class="token punctuation">,</span>bottom<span class="token punctuation">,</span>left<span class="token punctuation">,</span>right<span class="token punctuation">,</span>borderType<span class="token operator">=</span>cv2<span class="token punctuation">.</span>BORDER_CONSTANT<span class="token punctuation">,</span>value<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#将这些图片进行可视化在坐标轴上</span>
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">231</span><span class="token punctuation">)</span><span class="token punctuation">,</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token string">&#39;gray&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;original&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">232</span><span class="token punctuation">)</span><span class="token punctuation">,</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>replicate<span class="token punctuation">,</span><span class="token string">&#39;gray&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;replicate&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">233</span><span class="token punctuation">)</span><span class="token punctuation">,</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>reflect<span class="token punctuation">,</span><span class="token string">&#39;gray&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;reflect&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">234</span><span class="token punctuation">)</span><span class="token punctuation">,</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>reflect101<span class="token punctuation">,</span><span class="token string">&#39;gray&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;reflect101&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">235</span><span class="token punctuation">)</span><span class="token punctuation">,</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>wrap<span class="token punctuation">,</span><span class="token string">&#39;gray&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;wrap&#39;</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">236</span><span class="token punctuation">)</span><span class="token punctuation">,</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>constant<span class="token punctuation">,</span><span class="token string">&#39;gray&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&#39;constant&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211945395.png" alt="image-20220130113414325" tabindex="0" loading="lazy"><figcaption>image-20220130113414325</figcaption></figure><h2 id="_3-视频读取" tabindex="-1"><a class="header-anchor" href="#_3-视频读取"><span>3.视频读取</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>vc<span class="token operator">=</span>cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token string">&#39;./two.mp4&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#检查是否可以正确打开</span>
<span class="token keyword">if</span> vc<span class="token punctuation">.</span>isOpened<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token builtin">open</span><span class="token punctuation">,</span> frame<span class="token operator">=</span>vc<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token builtin">open</span><span class="token operator">=</span><span class="token boolean">False</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#一帧帧遍历</span>
<span class="token keyword">while</span> <span class="token builtin">open</span><span class="token punctuation">:</span>   
    <span class="token comment">#ret参数保存表示是否正确读取到帧，frame参数表示读取到帧的内容</span>
    ret<span class="token punctuation">,</span> frame<span class="token operator">=</span>vc<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> frame <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        <span class="token keyword">break</span>
    <span class="token comment">#如果这帧存在就进行操作，每一帧的处理相当于处理图片</span>
    <span class="token keyword">if</span> ret<span class="token operator">==</span><span class="token boolean">True</span><span class="token punctuation">:</span>
        gray<span class="token operator">=</span>cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>frame<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>COLOR_BGR2GRAY<span class="token punctuation">)</span>
        cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;reslt&#39;</span><span class="token punctuation">,</span>gray<span class="token punctuation">)</span>
        <span class="token comment">#在一帧处理后延时一定时间再处理下一帧,按esc直接退出esc对应的ascll为27</span>
        <span class="token keyword">if</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span> <span class="token operator">==</span> <span class="token number">27</span><span class="token punctuation">:</span>
            <span class="token keyword">break</span>
vc<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-数值计算" tabindex="-1"><a class="header-anchor" href="#_4-数值计算"><span>4.数值计算</span></a></h2><p>数值计算中有直接相加和add函数两种他们的区别在于越界后的处理形式</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#如果相加越界就%256</span>
img2<span class="token operator">=</span>cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;./two.png&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span>img2<span class="token operator">+</span>img2<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#越界就直接当成255</span>
cv2<span class="token punctuation">.</span>add<span class="token punctuation">(</span>img2<span class="token punctuation">,</span>img2<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-图像的阈值" tabindex="-1"><a class="header-anchor" href="#_5-图像的阈值"><span>5.图像的阈值</span></a></h2><p>ret，dst=cv2.threshold(src,thresh,maxval,type)</p><p>src:输入图，只能输入单通道图像，通常来说为灰度图</p><p>dst：输出图</p><p>thresh：阈值</p><p>maxval：当像素超过或者小于阈值所赋予的值</p><p>type：二值化操作的类型，包含以下五种类型</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#超过阈值部分取maxval（最大值），否则取0</span>
ret<span class="token punctuation">,</span>thresh1<span class="token operator">=</span>cv2<span class="token punctuation">.</span>threshold<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token number">127</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>THRESH_BINARY<span class="token punctuation">)</span>
<span class="token comment">#THRESH_BINARY的反转</span>
ret<span class="token punctuation">,</span>thresh2<span class="token operator">=</span>cv2<span class="token punctuation">.</span>threshold<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token number">127</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>THRESH_BINARY_INV<span class="token punctuation">)</span>
<span class="token comment">#大于阈值部分设为阈值否则部分</span>
ret<span class="token punctuation">,</span>thresh3<span class="token operator">=</span>cv2<span class="token punctuation">.</span>threshold<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token number">127</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>THRESH_TRUNC<span class="token punctuation">)</span>
<span class="token comment">#大于阈值部分不改变，否则设为0</span>
ret<span class="token punctuation">,</span>thresh4<span class="token operator">=</span>cv2<span class="token punctuation">.</span>threshold<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token number">127</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>THRESH_TOZERO<span class="token punctuation">)</span>
<span class="token comment">#THRESH_TOZERO的反转</span>
ret<span class="token punctuation">,</span>thresh5<span class="token operator">=</span>cv2<span class="token punctuation">.</span>threshold<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token number">127</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>THRESH_TOZERO_INV<span class="token punctuation">)</span>

titles<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;img&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;THRESH_BINARY&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;THRESH_BINARY_INV&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;THRESH_TRUNC&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;THRESH_TOZERO&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;THRESH_TOZERO_INV&#39;</span><span class="token punctuation">]</span>
imgs<span class="token operator">=</span><span class="token punctuation">[</span>img<span class="token punctuation">,</span>thresh1<span class="token punctuation">,</span>thresh2<span class="token punctuation">,</span>thresh3<span class="token punctuation">,</span>thresh4<span class="token punctuation">,</span>thresh5<span class="token punctuation">]</span>  

<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>imgs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&#39;gray&#39;</span><span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span>titles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211945610.png" alt="image-20220130162527726" tabindex="0" loading="lazy"><figcaption>image-20220130162527726</figcaption></figure><h2 id="_6-图像平滑处理" tabindex="-1"><a class="header-anchor" href="#_6-图像平滑处理"><span>6.图像平滑处理</span></a></h2><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#均值滤波</span>
<span class="token comment">#简单的平均卷积操作</span>
<span class="token comment">#小括号中的3，3意思为每一个3*3单位进行一次计算</span>
blur<span class="token operator">=</span>cv2<span class="token punctuation">.</span>blur<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;blur&#39;</span><span class="token punctuation">,</span>blur<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 方框滤波</span>
<span class="token comment">#基本和均值一样，可以选择归一化</span>
box<span class="token operator">=</span>cv2<span class="token punctuation">.</span>boxFilter<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>normalize<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;box&#39;</span><span class="token punctuation">,</span>box<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 方框滤波</span>
<span class="token comment">#基本和均值一样，可以选择归一化,容易越界</span>
box<span class="token operator">=</span>cv2<span class="token punctuation">.</span>boxFilter<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>normalize<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;box&#39;</span><span class="token punctuation">,</span>box<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#高斯滤波</span>
<span class="token comment">#高斯模糊的卷积核里的数值是满足高斯分布，相当于更重视中间的</span>
aussian<span class="token operator">=</span>cv2<span class="token punctuation">.</span>GaussianBlur<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;aussian&#39;</span><span class="token punctuation">,</span>aussian<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#中值滤波</span>
<span class="token comment">#相当于用中值代替</span>
median<span class="token operator">=</span>cv2<span class="token punctuation">.</span>medianBlur<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;median&#39;</span><span class="token punctuation">,</span>aussian<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-形态学操作" tabindex="-1"><a class="header-anchor" href="#_7-形态学操作"><span>7.形态学操作</span></a></h2><h3 id="_7-1形态学-图像的腐蚀" tabindex="-1"><a class="header-anchor" href="#_7-1形态学-图像的腐蚀"><span>7.1形态学--图像的腐蚀</span></a></h3><p>当图像周围出现毛刺时就可以使用这种方法进行处理把毛刺去掉</p><p>cv2.erode(src, kernel, iteration)</p><p>参数说明：src表示的是输入图片，kernel表示的是方框的大小，iteration表示迭代的次数</p>`,58),r=n("p",null,"注：下面用到的ones函数的用法",-1),d=n("p",null,"numpy.ones(shape, dtype=None,order='C', *****,like=None)",-1),k=n("p",null,"shape参数：表示生成形状例如（5）那就是一维数组相当于[1,1,1,1,1]而（5，5）就是生成都为1的五行五列的二维数组",-1),v={href:"https://numpy.org/doc/stable/reference/arrays.scalars.html#numpy.int8",target:"_blank",rel:"noopener noreferrer"},m=n("code",null,"numpy.int8",-1),b={href:"https://numpy.org/doc/stable/reference/arrays.scalars.html#numpy.float64",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"numpy.float64",-1),h=n("p",null,"order参数：是否在内存中以行优先（C 风格）或列优先（Fortran 风格）的顺序存储多维数据",-1),y=n("p",null,[s("like参数：引用对象以允许创建不是 NumPy 数组的数组。如果传入的类数组 as"),n("code",null,"like"),s("支持"),n("code",null,"__array_function__"),s("协议，则结果将由它定义。在这种情况下，它确保创建一个与通过此参数传入的对象兼容的数组对象。")],-1),_=n("p",null,[n("em",null,"版本 1.20.0 中的新功能。")],-1),w=p(`<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>img<span class="token operator">=</span>cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;./dige.png&#39;</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;img&#39;</span><span class="token punctuation">,</span>img<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>kernel<span class="token operator">=</span>np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span>
erosion<span class="token operator">=</span>cv2<span class="token punctuation">.</span>erode<span class="token punctuation">(</span>img<span class="token punctuation">,</span>kernel<span class="token punctuation">,</span>iterations<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;erosion&#39;</span><span class="token punctuation">,</span>erosion<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不同的腐蚀程度也让图像的腐蚀结果不相同</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>pie<span class="token operator">=</span>cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;./pie.png&#39;</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;pie&#39;</span><span class="token punctuation">,</span>pie<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>
kernel<span class="token operator">=</span>np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span>
<span class="token comment">#第三个参数表示腐蚀的程度</span>
erosion_1<span class="token operator">=</span>cv2<span class="token punctuation">.</span>erode<span class="token punctuation">(</span>pie<span class="token punctuation">,</span>kernel<span class="token punctuation">,</span>iterations<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
erosion_2<span class="token operator">=</span>cv2<span class="token punctuation">.</span>erode<span class="token punctuation">(</span>pie<span class="token punctuation">,</span>kernel<span class="token punctuation">,</span>iterations<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
erosion_3<span class="token operator">=</span>cv2<span class="token punctuation">.</span>erode<span class="token punctuation">(</span>pie<span class="token punctuation">,</span>kernel<span class="token punctuation">,</span>iterations<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
<span class="token comment">#将三次不同腐蚀程度放在一起做对比</span>
res<span class="token operator">=</span>np<span class="token punctuation">.</span>hstack<span class="token punctuation">(</span><span class="token punctuation">(</span>erosion_1<span class="token punctuation">,</span>erosion_2<span class="token punctuation">,</span>erosion_3<span class="token punctuation">)</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;res&#39;</span><span class="token punctuation">,</span>res<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-2形态学-膨胀操作" tabindex="-1"><a class="header-anchor" href="#_7-2形态学-膨胀操作"><span>7.2形态学--膨胀操作</span></a></h3><p>一般在对图像进行腐蚀操作后图形会受到一定的破坏，比如瘦一圈这时就可以使用膨胀操作对破坏进行还原</p><p>cv2.dilate(src, kernel, iteration)</p><p>参数说明：src表示的是输入图片，kernel表示的是方框的大小，iteration表示迭代的次数</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>img<span class="token operator">=</span>cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;./dige.png&#39;</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;img&#39;</span><span class="token punctuation">,</span>img<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#先对图像进行腐蚀</span>
kernel<span class="token operator">=</span>np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span>
erosion<span class="token operator">=</span>cv2<span class="token punctuation">.</span>erode<span class="token punctuation">(</span>img<span class="token punctuation">,</span>kernel<span class="token punctuation">,</span>iterations<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;erosion&#39;</span><span class="token punctuation">,</span>erosion<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>kernel<span class="token operator">=</span>np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span>
erosion<span class="token operator">=</span>cv2<span class="token punctuation">.</span>dilate<span class="token punctuation">(</span>erosion<span class="token punctuation">,</span>kernel<span class="token punctuation">,</span>iterations<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;erosion&#39;</span><span class="token punctuation">,</span>erosion<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将不同膨胀程度的图像放在一起对比更加明显</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>pie<span class="token operator">=</span>cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;./pie.png&#39;</span><span class="token punctuation">)</span>
kernel<span class="token operator">=</span>np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span>
<span class="token comment">#第三个参数表示膨胀</span>
erosion_1<span class="token operator">=</span>cv2<span class="token punctuation">.</span>dilate<span class="token punctuation">(</span>pie<span class="token punctuation">,</span>kernel<span class="token punctuation">,</span>iterations<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
erosion_2<span class="token operator">=</span>cv2<span class="token punctuation">.</span>dilate<span class="token punctuation">(</span>pie<span class="token punctuation">,</span>kernel<span class="token punctuation">,</span>iterations<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
erosion_3<span class="token operator">=</span>cv2<span class="token punctuation">.</span>dilate<span class="token punctuation">(</span>pie<span class="token punctuation">,</span>kernel<span class="token punctuation">,</span>iterations<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
<span class="token comment">#将三次不同膨胀度放在一起做对比</span>
res<span class="token operator">=</span>np<span class="token punctuation">.</span>hstack<span class="token punctuation">(</span><span class="token punctuation">(</span>erosion_1<span class="token punctuation">,</span>erosion_2<span class="token punctuation">,</span>erosion_3<span class="token punctuation">)</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;res&#39;</span><span class="token punctuation">,</span>res<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-3开运算和闭运算" tabindex="-1"><a class="header-anchor" href="#_7-3开运算和闭运算"><span>7.3开运算和闭运算</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#开运算：先腐蚀再膨胀</span>
img<span class="token operator">=</span>cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;./dige.png&#39;</span><span class="token punctuation">)</span>
kernel<span class="token operator">=</span>np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span>
<span class="token comment">#第二个参数控制这个运算是开运算还是闭运算</span>
opening<span class="token operator">=</span>cv2<span class="token punctuation">.</span>morphologyEx<span class="token punctuation">(</span>img<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>MORPH_OPEN<span class="token punctuation">,</span>kernel<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;opening&#39;</span><span class="token punctuation">,</span>opening<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#闭运算：先膨胀再腐蚀</span>
img<span class="token operator">=</span>cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;./dige.png&#39;</span><span class="token punctuation">)</span>
kernel<span class="token operator">=</span>np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span>
<span class="token comment">#第二个参数控制这个运算是开运算还是闭运算</span>
closing<span class="token operator">=</span>cv2<span class="token punctuation">.</span>morphologyEx<span class="token punctuation">(</span>img<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>MORPH_CLOSE<span class="token punctuation">,</span>kernel<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;closing&#39;</span><span class="token punctuation">,</span>closing<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-4梯度运算" tabindex="-1"><a class="header-anchor" href="#_7-4梯度运算"><span>7.4梯度运算</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#梯度运算=膨胀-腐蚀</span>
<span class="token comment">#首先先让膨胀的和腐蚀的图像进行对比</span>
pie<span class="token operator">=</span>cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;./pie.png&#39;</span><span class="token punctuation">)</span>
kernel<span class="token operator">=</span>np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span>
dilate<span class="token operator">=</span>cv2<span class="token punctuation">.</span>dilate<span class="token punctuation">(</span>pie<span class="token punctuation">,</span>kernel<span class="token punctuation">,</span>iterations<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>
erosion<span class="token operator">=</span>cv2<span class="token punctuation">.</span>erode<span class="token punctuation">(</span>pie<span class="token punctuation">,</span>kernel<span class="token punctuation">,</span>iterations<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>
res<span class="token operator">=</span>np<span class="token punctuation">.</span>hstack<span class="token punctuation">(</span><span class="token punctuation">(</span>dilate<span class="token punctuation">,</span>erosion<span class="token punctuation">)</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;res&#39;</span><span class="token punctuation">,</span>res<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>gradient<span class="token operator">=</span>cv2<span class="token punctuation">.</span>morphologyEx<span class="token punctuation">(</span>pie<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>MORPH_GRADIENT<span class="token punctuation">,</span>kernel<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;gradient&#39;</span><span class="token punctuation">,</span>gradient<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-5礼帽与黑帽" tabindex="-1"><a class="header-anchor" href="#_7-5礼帽与黑帽"><span>7.5礼帽与黑帽</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#礼帽=原始输入-开运算结果</span>
img<span class="token operator">=</span>cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;./dige.png&#39;</span><span class="token punctuation">)</span>
kernel<span class="token operator">=</span>np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span>
tophat<span class="token operator">=</span>cv2<span class="token punctuation">.</span>morphologyEx<span class="token punctuation">(</span>img<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>MORPH_TOPHAT<span class="token punctuation">,</span>kernel<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;tophat&#39;</span><span class="token punctuation">,</span>tophat<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#黑帽=闭运算-原始输入</span>
img<span class="token operator">=</span>cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;./dige.png&#39;</span><span class="token punctuation">)</span>
blackhat<span class="token operator">=</span>cv2<span class="token punctuation">.</span>morphologyEx<span class="token punctuation">(</span>img<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>MORPH_BLACKHAT<span class="token punctuation">,</span>kernel<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;blackhat&#39;</span><span class="token punctuation">,</span>blackhat<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-梯度运算" tabindex="-1"><a class="header-anchor" href="#_8-梯度运算"><span>8.梯度运算</span></a></h2><h3 id="_8-1sobel算子" tabindex="-1"><a class="header-anchor" href="#_8-1sobel算子"><span>8.1sobel算子</span></a></h3>`,25),x={href:"https://so.csdn.net/so/search?q=scale&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},f=p(`<p>参数：</p><p>src：输入图像 ddepth: 输出图像的深度（可以理解为数据类型），-1表示与原图像相同的深度 dx,dy:当组合为dx=1,dy=0时求x方向的一阶导数，当组合为dx=0,dy=1时求y方向的一阶导数（如果同时为1，通常得不到想要的结果） ksize:（可选参数）Sobel算子的大小，必须是1,3,5或者7,默认为3。求X方向和Y方向一阶导数时，卷积核分别为：</p><figure><img src="https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211945457.png" alt="image-20220131163052219" tabindex="0" loading="lazy"><figcaption>image-20220131163052219</figcaption></figure><p>scale:（可选参数）将梯度计算得到的数值放大的比例系数，效果通常使梯度图更亮，默认为1 delta:（可选参数）在将目标图像存储进多维数组前，可以将每个像素值增加delta，默认为0 borderType:（可选参数）决定图像在进行滤波操作（卷积）时边沿像素的处理方式，默认为BORDER_DEFAULT</p><blockquote><h2 id="cv2-addweighted" tabindex="-1"><a class="header-anchor" href="#cv2-addweighted"><span>cv2.addWeighted()</span></a></h2><p>addWeighted()函数是将两张相同大小，相同类型的图片（叠加）线性融合的函数，可以实现图片的特效。</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>cv2<span class="token punctuation">.</span>addWeighted<span class="token punctuation">(</span>InputArray src1<span class="token punctuation">,</span> double alpha<span class="token punctuation">,</span> InputArray src2<span class="token punctuation">,</span> double beta<span class="token punctuation">,</span> double gamma<span class="token punctuation">,</span> OutputArray dst<span class="token punctuation">,</span> <span class="token builtin">int</span> dtype<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>src1 ： 需要加权的第一个数组，常常填一个Mat alpha ： 第一个数组的权重 src2 ： 第二个数组，需要和第一个数组拥有相同的尺寸和通道数 beta ： 第二个数组的权重值，值为1-alpha gamma ： 一个加到权重总和上的标量值，可以理解为加权和后的图像的偏移量 dst ： 输出的数组，和输入的两个数组拥有相同的尺寸和通道数。dst = src1[I] * alpha + src2[I] * beta + gamma dtype ： 可选，输出阵列的深度，有默认值-1。当两个输入数组具有相同深度时，这个参数设置为-1（默认值），即等同于src1.depth()。</p></blockquote><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>pie<span class="token operator">=</span>cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;./pie.png&#39;</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;pie&#39;</span><span class="token punctuation">,</span>pie<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">cv_show</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>img<span class="token punctuation">)</span><span class="token punctuation">:</span>
    cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>name<span class="token punctuation">,</span>img<span class="token punctuation">)</span>
    cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#第二个参数写法可以让数值带负数</span>
sobelx<span class="token operator">=</span>cv2<span class="token punctuation">.</span>Sobel<span class="token punctuation">(</span>pie<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>CV_64F<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>ksize<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
cv_show<span class="token punctuation">(</span><span class="token string">&#39;sobelx&#39;</span><span class="token punctuation">,</span>sobelx<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#先进行x轴处理</span>
sobelx<span class="token operator">=</span>cv2<span class="token punctuation">.</span>Sobel<span class="token punctuation">(</span>pie<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>CV_64F<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>ksize<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
<span class="token comment">#取绝对值才能让图像完整</span>
sobelx<span class="token operator">=</span>cv2<span class="token punctuation">.</span>convertScaleAbs<span class="token punctuation">(</span>sobelx<span class="token punctuation">)</span>
cv_show<span class="token punctuation">(</span><span class="token string">&#39;sobelx&#39;</span><span class="token punctuation">,</span>sobelx<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#再进行y轴处理</span>
sobely<span class="token operator">=</span>cv2<span class="token punctuation">.</span>Sobel<span class="token punctuation">(</span>pie<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>CV_64F<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>ksize<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
sobely<span class="token operator">=</span>cv2<span class="token punctuation">.</span>convertScaleAbs<span class="token punctuation">(</span>sobely<span class="token punctuation">)</span>
cv_show<span class="token punctuation">(</span><span class="token string">&#39;sobely&#39;</span><span class="token punctuation">,</span>sobely<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#再进行求和</span>
sobelxy<span class="token operator">=</span>cv2<span class="token punctuation">.</span>addWeighted<span class="token punctuation">(</span>sobelx<span class="token punctuation">,</span><span class="token number">0.5</span><span class="token punctuation">,</span>sobely<span class="token punctuation">,</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>
cv_show<span class="token punctuation">(</span><span class="token string">&#39;sobelxy&#39;</span><span class="token punctuation">,</span>sobelxy<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不建议直接在前面Sobel中xy值全部设置为1这样效果不如分别求出后再相加的好</p><h3 id="_8-2scharr算子" tabindex="-1"><a class="header-anchor" href="#_8-2scharr算子"><span>8.2Scharr算子</span></a></h3>`,13),R={href:"https://so.csdn.net/so/search?q=OpenCV&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},C=p(`<figure><img src="https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211946257.png" alt="image-20220201152010926" tabindex="0" loading="lazy"><figcaption>image-20220201152010926</figcaption></figure><p>dst = cv2.Scharr( src, ddepth, dx, dy[, scale[, delta[, borderType]]] )</p><p>dst ：代表输出图像。 src： 代表原始图像。 ddepth ：代表输出图像深度。该值与函数 cv2.Sobel()中的参数 ddepth 的含义相同。 dx ：代表 x 方向上的导数阶数。 dy： 代表 y 方向上的导数阶数。 scale ：代表计算导数值时的缩放因子，该项是可选项，默认值是 1，表示没有缩放。 delta ：代表加到目标图像上的亮度值，该项是可选项，默认值为 0。 borderType ：代表边界样式</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>scharrx<span class="token operator">=</span>cv2<span class="token punctuation">.</span>Scharr<span class="token punctuation">(</span>pie<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>CV_64F<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>
scharry<span class="token operator">=</span>cv2<span class="token punctuation">.</span>Scharr<span class="token punctuation">(</span>pie<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>CV_64F<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>
scharrx<span class="token operator">=</span>cv2<span class="token punctuation">.</span>convertScaleAbs<span class="token punctuation">(</span>scharrx<span class="token punctuation">)</span>
scharry<span class="token operator">=</span>cv2<span class="token punctuation">.</span>convertScaleAbs<span class="token punctuation">(</span>scharry<span class="token punctuation">)</span>
scharrxy<span class="token operator">=</span>cv2<span class="token punctuation">.</span>addWeighted<span class="token punctuation">(</span>scharrx<span class="token punctuation">,</span><span class="token number">0.5</span><span class="token punctuation">,</span>scharry<span class="token punctuation">,</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>
cv_show<span class="token punctuation">(</span><span class="token string">&#39;sobelxy&#39;</span><span class="token punctuation">,</span>scharrxy<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-3laplacian算子" tabindex="-1"><a class="header-anchor" href="#_8-3laplacian算子"><span>8.3laplacian算子</span></a></h3><figure><img src="https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211946952.png" alt="image-20220201153131991" tabindex="0" loading="lazy"><figcaption>image-20220201153131991</figcaption></figure><p>dst = cv2.Laplacian(src, ddepth[, dst[, ksize[, scale[, delta[, borderType]]]]])</p><p>dst ：代表输出图像。 src： 代表原始图像。 ddepth ：代表输出图像深度。该值与函数 cv2.Sobel()中的参数 ddepth 的含义相同。 dx ：代表 x 方向上的导数阶数。 dy： 代表 y 方向上的导数阶数。 scale ：代表计算导数值时的缩放因子，该项是可选项，默认值是 1，表示没有缩放。 delta ：代表加到目标图像上的亮度值，该项是可选项，默认值为 0。 borderType ：代表边界样式</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#因为算法的差异所以在laplacian算子中并不用涉及到两个方向分别求结果直接使用即可</span>
laplacian<span class="token operator">=</span>cv2<span class="token punctuation">.</span>Laplacian<span class="token punctuation">(</span>pie<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>CV_64F<span class="token punctuation">)</span>
laplacian<span class="token operator">=</span>cv2<span class="token punctuation">.</span>convertScaleAbs<span class="token punctuation">(</span>laplacian<span class="token punctuation">)</span>
cv_show<span class="token punctuation">(</span><span class="token string">&#39;sobelxy&#39;</span><span class="token punctuation">,</span>laplacian<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#对比三个算子的效果</span>
res<span class="token operator">=</span>np<span class="token punctuation">.</span>hstack<span class="token punctuation">(</span><span class="token punctuation">(</span>sobelxy<span class="token punctuation">,</span>scharrxy<span class="token punctuation">,</span>laplacian<span class="token punctuation">)</span><span class="token punctuation">)</span>
cv_show<span class="token punctuation">(</span><span class="token string">&#39;res&#39;</span><span class="token punctuation">,</span>res<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>图像处理前：</p><figure><img src="https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211946716.png" alt="image-20220201154518804" tabindex="0" loading="lazy"><figcaption>image-20220201154518804</figcaption></figure><p>图像分别经过三种算子处理：</p><figure><img src="https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211946761.png" alt="image-20220201154443258" tabindex="0" loading="lazy"><figcaption>image-20220201154443258</figcaption></figure><h2 id="_9-canny边缘检测" tabindex="-1"><a class="header-anchor" href="#_9-canny边缘检测"><span>9.Canny边缘检测</span></a></h2><p>Canny边缘检测算法可以分为以下5个步骤：</p><ul><li>应用高斯滤波来平滑图像，目的是去除噪声</li><li>找寻图像的强度梯度（intensity gradients）</li><li>应用非最大抑制（non-maximum suppression）技术来消除边误检（本来不是但检测出来是）</li><li>应用双阈值的方法来决定可能的（潜在的）边界</li><li>利用滞后技术来跟踪边界</li></ul><p>Canny边缘检测的公式推导：</p><p>​ （1）高斯滤波：对图像进行平滑处理</p><figure><img src="https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211946917.png" alt="image-20220201155513905" tabindex="0" loading="lazy"><figcaption>image-20220201155513905</figcaption></figure><p>（2）计算梯度幅度和方向（采用Sobel算子）</p><figure><img src="https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211946852.png" alt="image-20220201155541573" tabindex="0" loading="lazy"><figcaption>image-20220201155541573</figcaption></figure><p>（3）非极大值抑制</p><figure><img src="https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211946633.png" alt="image-20220201155636845" tabindex="0" loading="lazy"><figcaption>image-20220201155636845</figcaption></figure><figure><img src="https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211946337.png" alt="image-20220201155725707" tabindex="0" loading="lazy"><figcaption>image-20220201155725707</figcaption></figure><p>（4）双阈值检测</p><figure><img src="https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211946316.png" alt="image-20220201155741900" tabindex="0" loading="lazy"><figcaption>image-20220201155741900</figcaption></figure><p>cv2.Canny(image, threshold1, threashold2)</p><p>参数：</p><ul><li>image : 原始图像</li><li>threshold1 : 阈值1 (minVal)</li><li>threshold2 : 阈值2 (maxVal)</li></ul>`,30),E={href:"https://so.csdn.net/so/search?q=%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},T=p(`<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#首先获取一个灰度图</span>
img<span class="token operator">=</span>cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;./img/ironman.png&#39;</span><span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>IMREAD_GRAYSCALE<span class="token punctuation">)</span>
<span class="token comment">#第二个和第三个参数分别为最大和最小的阈值，第二个参数约小连接度越高，第三个参数约大边缘细节越少</span>
v1<span class="token operator">=</span>cv2<span class="token punctuation">.</span>Canny<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">700</span><span class="token punctuation">)</span>
v2<span class="token operator">=</span>cv2<span class="token punctuation">.</span>Canny<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span>
res<span class="token operator">=</span>np<span class="token punctuation">.</span>hstack<span class="token punctuation">(</span><span class="token punctuation">(</span>v1<span class="token punctuation">,</span>v2<span class="token punctuation">)</span><span class="token punctuation">)</span>
cv_show<span class="token punctuation">(</span><span class="token string">&#39;res&#39;</span><span class="token punctuation">,</span>res<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_10-图像金字塔" tabindex="-1"><a class="header-anchor" href="#_10-图像金字塔"><span>10.图像金字塔</span></a></h2><h3 id="_10-1高斯金字塔" tabindex="-1"><a class="header-anchor" href="#_10-1高斯金字塔"><span>10.1高斯金字塔</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>img<span class="token operator">=</span>cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;./img/ironman.png&#39;</span><span class="token punctuation">)</span>
cv_show<span class="token punctuation">(</span><span class="token string">&#39;img&#39;</span><span class="token punctuation">,</span>img<span class="token punctuation">)</span>
img<span class="token punctuation">.</span>shape
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#结果</span>
<span class="token punctuation">(</span><span class="token number">523</span><span class="token punctuation">,</span> <span class="token number">393</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="向下采样" tabindex="-1"><a class="header-anchor" href="#向下采样"><span>向下采样:</span></a></h4><p>原理：先对图像做高斯平滑，然后删除图像的偶数行和偶数列，即将图像在x和y方向均减少一半，最后的图像为原来图像的四分之一</p><figure><img src="https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211946669.png" alt="image-20220201172749432" tabindex="0" loading="lazy"><figcaption>image-20220201172749432</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#向下采样</span>
down<span class="token operator">=</span>cv2<span class="token punctuation">.</span>pyrDown<span class="token punctuation">(</span>img<span class="token punctuation">)</span>
cv_show<span class="token punctuation">(</span><span class="token string">&#39;down&#39;</span><span class="token punctuation">,</span>down<span class="token punctuation">)</span>
down<span class="token punctuation">.</span>shape
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#结果</span>
<span class="token punctuation">(</span><span class="token number">262</span><span class="token punctuation">,</span> <span class="token number">197</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="向上采样" tabindex="-1"><a class="header-anchor" href="#向上采样"><span>向上采样:</span></a></h4><p>原理：将图像的行和列，间隔的插入零，最后做一个高斯模糊</p><figure><img src="https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211946766.png" alt="image-20220201172830307" tabindex="0" loading="lazy"><figcaption>image-20220201172830307</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#向上采样</span>
up<span class="token operator">=</span>cv2<span class="token punctuation">.</span>pyrUp<span class="token punctuation">(</span>img<span class="token punctuation">)</span>
cv_show<span class="token punctuation">(</span><span class="token string">&#39;up&#39;</span><span class="token punctuation">,</span>up<span class="token punctuation">)</span>
up<span class="token punctuation">.</span>shape
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#结果</span>
<span class="token punctuation">(</span><span class="token number">1046</span><span class="token punctuation">,</span> <span class="token number">786</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>因此如果将一个图片向上采样后再向下采样最终图片结果是和原图片不一样，因为向上采样过程中会自己填充0进去而向下采样则会去除掉一部分图片原有的信息</p><h3 id="_10-2拉普拉斯金字塔" tabindex="-1"><a class="header-anchor" href="#_10-2拉普拉斯金字塔"><span>10.2拉普拉斯金字塔</span></a></h3><p>公式：</p><figure><img src="https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211946224.png" alt="image-20220201173406558" tabindex="0" loading="lazy"><figcaption>image-20220201173406558</figcaption></figure><blockquote><p>G为原始图像</p></blockquote><figure><img src="https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211946872.png" alt="image-20220201173626452" tabindex="0" loading="lazy"><figcaption>image-20220201173626452</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>down<span class="token operator">=</span>cv2<span class="token punctuation">.</span>pyrDown<span class="token punctuation">(</span>img<span class="token punctuation">)</span>
down_up<span class="token operator">=</span>cv2<span class="token punctuation">.</span>pyrUp<span class="token punctuation">(</span>down<span class="token punctuation">)</span>
L<span class="token operator">=</span>img<span class="token operator">-</span>down_up
cv_show<span class="token punctuation">(</span><span class="token string">&#39;L&#39;</span><span class="token punctuation">,</span>L<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_11-图像轮廓" tabindex="-1"><a class="header-anchor" href="#_11-图像轮廓"><span>11.图像轮廓</span></a></h2><p>cv2.findContours(image, mode, method, contours=None, hierarchy=None, offset=None)</p><p>参数 描述 image 寻找轮廓的图像，注意输入的图片必须为二值图片。若输入的图片为彩色图片，必须先进行灰度化和二值化</p><p>mode 轮廓的检索模式，有4种 method 轮廓的近似办法，有4种 contours 使用findContours检测到的轮廓数据，每个轮廓以点向量的形式存储，point类型的vector hierarchy 可选层次结构信息 offset 可选轮廓偏移参数，用制定偏移量offset=(dx, dy)给出绘制轮廓的偏移量</p><p>返回值：</p><p>opencv2返回两个值：一个是轮廓本身<strong>contours</strong>，还有一个是每条轮廓对应的属性<strong>hierarchy</strong>。</p><p>opencv3返回三个值：img, countours, hierarchy</p><blockquote><p>mode 描述</p><p>cv2.RETR_EXTERNAL 只检测外轮廓 cv2.RETR_LIST 提取所有轮廓，并放置在list中，检测的轮廓不建立等级关系 cv2.RETR_CCOMP 建立两个等级的轮廓，上面的一层为外边界，里面的一层为内孔的边界信息。如果内孔内还有一个连通物体，这个物体的边界也在顶层。 cv2.RETR_TREE 检测所有轮廓，建立完整的层次结构，建立网状轮廓结构 （通常都用这个）</p><p>method 描述 cv2.CHAIN_APPROX_NONE 获取每个轮廓的每个像素，相邻的两个点的像素位置差不超过1 cv2.CHAIN_APPROX_SIMPLE 压缩水平方向，垂直方向，对角线方向的元素，值保留该方向的重点坐标，如果一个矩形轮廓只需4个点来保存轮廓信息 cv2.CHAIN_APPROX_TC89_L1 使用Teh-Chini chain近似算法 cv2.CHAIN_APPROX_TC89_KCOS 使用Teh-Chini chain近似算法</p></blockquote><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>img<span class="token operator">=</span>cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;./img/ironman.png&#39;</span><span class="token punctuation">)</span>
gray<span class="token operator">=</span>cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>COLOR_BGR2GRAY<span class="token punctuation">)</span>
<span class="token comment">#使用阈值把图片变为二值图像</span>
ret<span class="token punctuation">,</span>thresh<span class="token operator">=</span>cv2<span class="token punctuation">.</span>threshold<span class="token punctuation">(</span>gray<span class="token punctuation">,</span><span class="token number">127</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>THRESH_BINARY<span class="token punctuation">)</span>
cv_show<span class="token punctuation">(</span><span class="token string">&#39;thresh&#39;</span><span class="token punctuation">,</span>thresh<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#取轮廓</span>
contours<span class="token punctuation">,</span>hierarchy<span class="token operator">=</span>cv2<span class="token punctuation">.</span>findContours<span class="token punctuation">(</span>thresh<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>RETR_TREE<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>CHAIN_APPROX_NONE<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#传入绘制图像，轮廓，轮廓索引，颜色模式，线条厚度</span>
<span class="token comment">#注意需要copy，确保原图不变</span>
draw_img<span class="token operator">=</span>img<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">#-1就是全部轮廓 如果有多个轮廓就从0开始</span>
res<span class="token operator">=</span>cv2<span class="token punctuation">.</span>drawContours<span class="token punctuation">(</span>draw_img<span class="token punctuation">,</span>contours<span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>
cv_show<span class="token punctuation">(</span><span class="token string">&#39;res&#39;</span><span class="token punctuation">,</span>res<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>draw_img<span class="token operator">=</span>img<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>
res<span class="token operator">=</span>cv2<span class="token punctuation">.</span>drawContours<span class="token punctuation">(</span>draw_img<span class="token punctuation">,</span>contours<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>
cv_show<span class="token punctuation">(</span><span class="token string">&#39;res&#39;</span><span class="token punctuation">,</span>res<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>轮廓的特征</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#-1代表全部，若有多个轮廓就从0开始</span>
cnt<span class="token operator">=</span>contours<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#求轮廓的面积</span>
cv2<span class="token punctuation">.</span>contourArea<span class="token punctuation">(</span>cnt<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#求周长</span>
cv2<span class="token punctuation">.</span>arcLength<span class="token punctuation">(</span>cnt<span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>近似轮廓</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#轮廓近似</span>
img<span class="token operator">=</span>cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;./img/contours.png&#39;</span><span class="token punctuation">)</span>
gray<span class="token operator">=</span>cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>COLOR_BGR2GRAY<span class="token punctuation">)</span>
<span class="token comment">#使用阈值把图片变为二值图像</span>
ret<span class="token punctuation">,</span>thresh<span class="token operator">=</span>cv2<span class="token punctuation">.</span>threshold<span class="token punctuation">(</span>gray<span class="token punctuation">,</span><span class="token number">127</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>THRESH_BINARY<span class="token punctuation">)</span>
contours<span class="token punctuation">,</span>hierarchy<span class="token operator">=</span>cv2<span class="token punctuation">.</span>findContours<span class="token punctuation">(</span>thresh<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>RETR_TREE<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>CHAIN_APPROX_NONE<span class="token punctuation">)</span>
cnt<span class="token operator">=</span>contours<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
draw_img<span class="token operator">=</span>img<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>
res<span class="token operator">=</span>cv2<span class="token punctuation">.</span>drawContours<span class="token punctuation">(</span>draw_img<span class="token punctuation">,</span><span class="token punctuation">[</span>cnt<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
cv_show<span class="token punctuation">(</span><span class="token string">&#39;res&#39;</span><span class="token punctuation">,</span>res<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#前面乘的值越大轮廓约不准</span>
epsilon<span class="token operator">=</span><span class="token number">0.1</span><span class="token operator">*</span>cv2<span class="token punctuation">.</span>arcLength<span class="token punctuation">(</span>cnt<span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">)</span>
approx<span class="token operator">=</span>cv2<span class="token punctuation">.</span>approxPolyDP<span class="token punctuation">(</span>cnt<span class="token punctuation">,</span>epsilon<span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">)</span>
res<span class="token operator">=</span>cv2<span class="token punctuation">.</span>drawContours<span class="token punctuation">(</span>draw_img<span class="token punctuation">,</span><span class="token punctuation">[</span>approx<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>
cv_show<span class="token punctuation">(</span><span class="token string">&#39;res&#39;</span><span class="token punctuation">,</span>res<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#外接矩形</span>
img<span class="token operator">=</span>cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;./img/pie2.png&#39;</span><span class="token punctuation">)</span>
gray<span class="token operator">=</span>cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>COLOR_BGR2GRAY<span class="token punctuation">)</span>
ret<span class="token punctuation">,</span>thresh<span class="token operator">=</span>cv2<span class="token punctuation">.</span>threshold<span class="token punctuation">(</span>gray<span class="token punctuation">,</span><span class="token number">127</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>THRESH_BINARY<span class="token punctuation">)</span>
contours<span class="token punctuation">,</span>hierarchy<span class="token operator">=</span>cv2<span class="token punctuation">.</span>findContours<span class="token punctuation">(</span>thresh<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>RETR_TREE<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>CHAIN_APPROX_NONE<span class="token punctuation">)</span>
<span class="token comment">#先选择正确的图形来创造外接矩形</span>
cnt<span class="token operator">=</span>contours<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token comment">#直接引用矩形边框函数</span>
x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>w<span class="token punctuation">,</span>h<span class="token operator">=</span>cv2<span class="token punctuation">.</span>boundingRect<span class="token punctuation">(</span>cnt<span class="token punctuation">)</span>
<span class="token comment">#画出矩形</span>
img<span class="token operator">=</span>cv2<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>x<span class="token operator">+</span>w<span class="token punctuation">,</span>y<span class="token operator">+</span>h<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>
cv_show<span class="token punctuation">(</span><span class="token string">&#39;img&#39;</span><span class="token punctuation">,</span>img<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211946817.png" alt="image-20220203210805743" tabindex="0" loading="lazy"><figcaption>image-20220203210805743</figcaption></figure><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>area<span class="token operator">=</span>cv2<span class="token punctuation">.</span>contourArea<span class="token punctuation">(</span>cnt<span class="token punctuation">)</span>
x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>w<span class="token punctuation">,</span>h<span class="token operator">=</span>cv2<span class="token punctuation">.</span>boundingRect<span class="token punctuation">(</span>cnt<span class="token punctuation">)</span>
rect_area<span class="token operator">=</span>w<span class="token operator">*</span>h
extent<span class="token operator">=</span><span class="token builtin">float</span><span class="token punctuation">(</span>area<span class="token punctuation">)</span><span class="token operator">/</span>rect_area
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;轮廓面积与边界矩形比&#39;</span><span class="token punctuation">,</span>extent<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment">#外接圆</span>
img<span class="token operator">=</span>cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;./img/chang.png&#39;</span><span class="token punctuation">)</span>
gray<span class="token operator">=</span>cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>COLOR_BGR2GRAY<span class="token punctuation">)</span>
ret<span class="token punctuation">,</span>thresh<span class="token operator">=</span>cv2<span class="token punctuation">.</span>threshold<span class="token punctuation">(</span>gray<span class="token punctuation">,</span><span class="token number">127</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>THRESH_BINARY<span class="token punctuation">)</span>
contours<span class="token punctuation">,</span>hierarchy<span class="token operator">=</span>cv2<span class="token punctuation">.</span>findContours<span class="token punctuation">(</span>thresh<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>RETR_TREE<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>CHAIN_APPROX_NONE<span class="token punctuation">)</span>
cnt<span class="token operator">=</span>contours<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span>radius<span class="token operator">=</span>cv2<span class="token punctuation">.</span>minEnclosingCircle<span class="token punctuation">(</span>cnt<span class="token punctuation">)</span>
center<span class="token operator">=</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">int</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span>
radius<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>radius<span class="token punctuation">)</span>
img<span class="token operator">=</span>cv2<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>img<span class="token punctuation">,</span>center<span class="token punctuation">,</span>radius<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>
cv_show<span class="token punctuation">(</span><span class="token string">&#39;img&#39;</span><span class="token punctuation">,</span>img<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211946793.png" alt="image-20220203212014871" tabindex="0" loading="lazy"><figcaption>image-20220203212014871</figcaption></figure><h2 id="_12-模板匹配" tabindex="-1"><a class="header-anchor" href="#_12-模板匹配"><span>12.模板匹配</span></a></h2>`,47),O={href:"https://so.csdn.net/so/search?q=OpenCV&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},A=p(`<table><thead><tr><th>匹配算法</th><th>method</th></tr></thead><tbody><tr><td>平方差匹配法</td><td>CV.TM_SQDIFF</td></tr><tr><td>归一化平方差匹配法</td><td>CV.TM_SQDIFF_NORMED</td></tr><tr><td>相关匹配法</td><td>CV.TM_CCORR</td></tr><tr><td>归一化相关匹配法</td><td>CV.TM_CCORR_NORMED</td></tr><tr><td>相关系数匹配法</td><td>CV.TM_CCOEFF</td></tr><tr><td>归一化相关系数匹配法</td><td>CV.TM_CCOEFF_NORMED</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>img<span class="token operator">=</span>cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;./img/lena.png&#39;</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>
template<span class="token operator">=</span>cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;./img/face.png&#39;</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>
h<span class="token punctuation">,</span>w<span class="token operator">=</span>template<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>
methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;cv2.TM_CCOEFF&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;cv2.TM_CCOEFF_NORMED&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;cv2.TM_CCORR&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;cv2.TM_CCORR_NORMED&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;cv2.TM_SQDIFF&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;cv2.TM_SQDIFF_NORMED&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">for</span> meth <span class="token keyword">in</span> methods<span class="token punctuation">:</span>
    img2<span class="token operator">=</span>img<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">#eval() 函数用来执行一个字符串表达式，并返回表达式的值,因为在matchTemplate中字符串类型识别不出来</span>
    method<span class="token operator">=</span><span class="token builtin">eval</span><span class="token punctuation">(</span>meth<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span>
    res<span class="token operator">=</span>cv2<span class="token punctuation">.</span>matchTemplate<span class="token punctuation">(</span>img<span class="token punctuation">,</span>template<span class="token punctuation">,</span>method<span class="token punctuation">)</span>
    min_val<span class="token punctuation">,</span>max_val<span class="token punctuation">,</span>min_loc<span class="token punctuation">,</span>max_loc<span class="token operator">=</span>cv2<span class="token punctuation">.</span>minMaxLoc<span class="token punctuation">(</span>res<span class="token punctuation">)</span>
    <span class="token comment">#在模板匹配的六种方法中TM_SQDIFF , TM_SQDIFF_NORMED这两种方法是取最小值其他都取最大值</span>
    <span class="token comment">#在这里先确定左上角左边</span>
    <span class="token keyword">if</span> method <span class="token keyword">in</span> <span class="token punctuation">[</span>cv2<span class="token punctuation">.</span>TM_SQDIFF<span class="token punctuation">,</span>cv2<span class="token punctuation">.</span>TM_SQDIFF_NORMED<span class="token punctuation">]</span><span class="token punctuation">:</span>
        top_left<span class="token operator">=</span>min_loc
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        top_left<span class="token operator">=</span>max_loc
    <span class="token comment">#通过左上角坐标算出右下角坐标</span>
    bottom_right<span class="token operator">=</span><span class="token punctuation">(</span>top_left<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span>w<span class="token punctuation">,</span>top_left<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span>h<span class="token punctuation">)</span>
    <span class="token comment">#将匹配出来的部分用rectangle函数在图片中画出来</span>
    cv2<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span>img2<span class="token punctuation">,</span>top_left<span class="token punctuation">,</span>bottom_right<span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>

    plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">121</span><span class="token punctuation">)</span><span class="token punctuation">,</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>res<span class="token punctuation">,</span>cmap<span class="token operator">=</span><span class="token string">&#39;gray&#39;</span><span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">#隐藏坐标轴</span>
    plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">)</span><span class="token punctuation">,</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img2<span class="token punctuation">,</span>cmap<span class="token operator">=</span><span class="token string">&#39;gray&#39;</span><span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>suptitle<span class="token punctuation">(</span>meth<span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function I(M,N){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,n("blockquote",null,[r,d,k,n("p",null,[s("dtype参数：数组所需的数据类型，例如"),n("a",v,[m,t(a)]),s(". 默认为 "),n("a",b,[g,t(a)]),s("。")]),h,y,_]),w,n("p",null,[s("函数cv2.Sobel(src, ddepth, dx, dy[, ksize[, "),n("a",x,[s("scale"),t(a)]),s("[, delta[, borderType]]]])")]),f,n("p",null,[s("在离散的空间上，有很多方法可以用来计算近似导数，在使用 3×3 的 Sobel 算子时，可能计算结果并不太精准。"),n("a",R,[s("OpenCV"),t(a)]),s(" 提供了 Scharr 算子，该算子具有和 Sobel 算子同样的速度，且精度更高。可以将 Scharr 算子看作对 Sobel 算子的改进，其核通常为：")]),C,n("p",null,[s("其中较大的阈值2用于检测图像中明显的边缘，但一般情况下检测的效果不会那么完美，"),n("a",E,[s("边缘检测"),t(a)]),s("出来是断断续续的。所以这时候用较小的第一个阈值用于将这些间断的边缘连接起来。")]),T,n("p",null,[s("模板匹配是在一幅图像中寻找一个特定目标的方法之一，这种方法的原理非常简单，遍历图像中的每一个可能的位置，比较各处与模板是否“相似”，当相似度足够高时，就认为找到了我们的目标。"),n("a",O,[s("OpenCV"),t(a)]),s("提供了6种模板匹配算法：")]),A])}const H=e(l,[["render",I],["__file","OpenCV_Pthon_note.html.vue"]]),B=JSON.parse(`{"path":"/posts/python/OpenCV_Pthon_note.html","title":"OpenCV-Pthon","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","category":["笔记","计算机"],"tag":["python","opencv"],"description":"OpenCV-Pthon 1.Python和opencv需要的环境 ​ 建议直接安装anaconda 2.图片读取 2.1图片的展示 ​ 首先用python来读取一张图片 通过调用来显示图片 这样就发现读取的图片是一个三维数组 但同时也可以用另外一种方法来显示图片，采用窗口的形式 如果想用实时使用这一块的功能就只需要将这一块改成函数 这样就可以使用cv...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/kdmvp_blog/posts/python/OpenCV_Pthon_note.html"}],["meta",{"property":"og:site_name","content":"kdmvp's\\tblog"}],["meta",{"property":"og:title","content":"OpenCV-Pthon"}],["meta",{"property":"og:description","content":"OpenCV-Pthon 1.Python和opencv需要的环境 ​ 建议直接安装anaconda 2.图片读取 2.1图片的展示 ​ 首先用python来读取一张图片 通过调用来显示图片 这样就发现读取的图片是一个三维数组 但同时也可以用另外一种方法来显示图片，采用窗口的形式 如果想用实时使用这一块的功能就只需要将这一块改成函数 这样就可以使用cv..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211945395.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-18T06:44:44.000Z"}],["meta",{"property":"article:author","content":"林伟强"}],["meta",{"property":"article:tag","content":"python"}],["meta",{"property":"article:tag","content":"opencv"}],["meta",{"property":"article:modified_time","content":"2024-04-18T06:44:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"OpenCV-Pthon\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211945395.png\\",\\"https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211945610.png\\",\\"https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211945457.png\\",\\"https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211946257.png\\",\\"https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211946952.png\\",\\"https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211946716.png\\",\\"https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211946761.png\\",\\"https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211946917.png\\",\\"https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211946852.png\\",\\"https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211946633.png\\",\\"https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211946337.png\\",\\"https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211946316.png\\",\\"https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211946669.png\\",\\"https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211946766.png\\",\\"https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211946224.png\\",\\"https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211946872.png\\",\\"https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211946817.png\\",\\"https://cdn.jsdelivr.net/gh/kdmvp-lin/MarkdownImg/202203211946793.png\\"],\\"dateModified\\":\\"2024-04-18T06:44:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"林伟强\\"}]}"]]},"headers":[{"level":2,"title":"1.Python和opencv需要的环境","slug":"_1-python和opencv需要的环境","link":"#_1-python和opencv需要的环境","children":[]},{"level":2,"title":"2.图片读取","slug":"_2-图片读取","link":"#_2-图片读取","children":[{"level":3,"title":"2.1图片的展示","slug":"_2-1图片的展示","link":"#_2-1图片的展示","children":[]},{"level":3,"title":"2.2图片的截取","slug":"_2-2图片的截取","link":"#_2-2图片的截取","children":[]},{"level":3,"title":"2.3图像填充","slug":"_2-3图像填充","link":"#_2-3图像填充","children":[]}]},{"level":2,"title":"3.视频读取","slug":"_3-视频读取","link":"#_3-视频读取","children":[]},{"level":2,"title":"4.数值计算","slug":"_4-数值计算","link":"#_4-数值计算","children":[]},{"level":2,"title":"5.图像的阈值","slug":"_5-图像的阈值","link":"#_5-图像的阈值","children":[]},{"level":2,"title":"6.图像平滑处理","slug":"_6-图像平滑处理","link":"#_6-图像平滑处理","children":[]},{"level":2,"title":"7.形态学操作","slug":"_7-形态学操作","link":"#_7-形态学操作","children":[{"level":3,"title":"7.1形态学--图像的腐蚀","slug":"_7-1形态学-图像的腐蚀","link":"#_7-1形态学-图像的腐蚀","children":[]},{"level":3,"title":"7.2形态学--膨胀操作","slug":"_7-2形态学-膨胀操作","link":"#_7-2形态学-膨胀操作","children":[]},{"level":3,"title":"7.3开运算和闭运算","slug":"_7-3开运算和闭运算","link":"#_7-3开运算和闭运算","children":[]},{"level":3,"title":"7.4梯度运算","slug":"_7-4梯度运算","link":"#_7-4梯度运算","children":[]},{"level":3,"title":"7.5礼帽与黑帽","slug":"_7-5礼帽与黑帽","link":"#_7-5礼帽与黑帽","children":[]}]},{"level":2,"title":"8.梯度运算","slug":"_8-梯度运算","link":"#_8-梯度运算","children":[{"level":3,"title":"8.1sobel算子","slug":"_8-1sobel算子","link":"#_8-1sobel算子","children":[]},{"level":3,"title":"8.2Scharr算子","slug":"_8-2scharr算子","link":"#_8-2scharr算子","children":[]},{"level":3,"title":"8.3laplacian算子","slug":"_8-3laplacian算子","link":"#_8-3laplacian算子","children":[]}]},{"level":2,"title":"9.Canny边缘检测","slug":"_9-canny边缘检测","link":"#_9-canny边缘检测","children":[]},{"level":2,"title":"10.图像金字塔","slug":"_10-图像金字塔","link":"#_10-图像金字塔","children":[{"level":3,"title":"10.1高斯金字塔","slug":"_10-1高斯金字塔","link":"#_10-1高斯金字塔","children":[]},{"level":3,"title":"10.2拉普拉斯金字塔","slug":"_10-2拉普拉斯金字塔","link":"#_10-2拉普拉斯金字塔","children":[]}]},{"level":2,"title":"11.图像轮廓","slug":"_11-图像轮廓","link":"#_11-图像轮廓","children":[]},{"level":2,"title":"12.模板匹配","slug":"_12-模板匹配","link":"#_12-模板匹配","children":[]}],"git":{"createdTime":1713422684000,"updatedTime":1713422684000,"contributors":[{"name":"kdmvp-lin","email":"1561790129@qq.com","commits":1}]},"readingTime":{"minutes":17.95,"words":5385},"filePathRelative":"posts/python/OpenCV_Pthon_note.md","localizedDate":"2024年4月18日","excerpt":"\\n<h2>1.Python和opencv需要的环境</h2>\\n<p>​\\t\\t建议直接安装anaconda</p>\\n<h2>2.图片读取</h2>\\n<h3>2.1图片的展示</h3>\\n<p>​\\t首先用python来读取一张图片</p>\\n<div class=\\"language-python\\" data-ext=\\"py\\" data-title=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">import</span> cv2\\n<span class=\\"token keyword\\">import</span> matplotlib<span class=\\"token punctuation\\">.</span>pyplot <span class=\\"token keyword\\">as</span> ply\\n<span class=\\"token keyword\\">import</span> numpy <span class=\\"token keyword\\">as</span> np\\n<span class=\\"token operator\\">%</span>matplotlib inline\\nimg<span class=\\"token operator\\">=</span>cv2<span class=\\"token punctuation\\">.</span>imread<span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'./one.png'</span><span class=\\"token punctuation\\">)</span>\\n</code></pre></div>","autoDesc":true}`);export{H as comp,B as data};
